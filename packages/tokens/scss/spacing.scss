@use './common';
@use './responsive';

$-spaces: (
  none: 0,
  xxs: 4px,
  xs: 8px,
  s: 12px,
  m: 20px,
  l: 32px,
  xl: 52px,
  xxl: 84px,
);

$-spaces-inner: (
  none: 0,
  xxs: 4px,
  xs: 8px,
  s: 12px,
  m: 16px,
  l: 24px,
  xl: 20px,
  xxl: 32px,
);

@function get-space($size, $inner: false) {
  @return map-get(if($inner, $-spaces-inner, $-spaces), $size);
}

@function get-space-rem($size, $inner: false) {
  @return common.get-rem(get-space($size, $inner));
}

@mixin padding($size, $hSize, $inner: false) {
  @if $hSize {
    padding: get-space($size, $inner) get-space($hSize, $inner);
  } @else {
    padding: get-space($size, $inner);
  }
}

@mixin auto-padding(
  $breakpoints: (
    mobile: (xs, s),
    laptop: (s, m),
    desktop: (m, l),
    large-desktop: (l, xl),
  ),
) {
  @if map-has-key($breakpoints, mobile) {
    @include responsive.media(laptop, false) {
      @include padding(map-get($breakpoints, mobile));
    }
  }

  @if map-has-key($breakpoints, laptop) {
    @include responsive.media(laptop) {
      @include padding(map-get($breakpoints, laptop));
    }
  }

  @if map-has-key($breakpoints, desktop) {
    @include responsive.media(desktop) {
      @include padding(map-get($breakpoints, desktop));
    }
  }

  @if map-has-key($breakpoints, large-desktop) {
    @include responsive.media(large-desktop) {
      @include padding(map-get($breakpoints, large-desktop));
    }
  }
}
