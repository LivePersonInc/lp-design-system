@use '~@liveperson-design-system/tokens/scss/border-radius';
@use '~@liveperson-design-system/tokens/scss/colors';
@use '~@liveperson-design-system/tokens/scss/colors-light';
@use '~@liveperson-design-system/tokens/scss/common';
@use '~@liveperson-design-system/tokens/scss/helpers';
@use '~@liveperson-design-system/tokens/scss/shadow';
@use '~@liveperson-design-system/tokens/scss/spacing';
@use '~@liveperson-design-system/tokens/scss/transparency';
@use '~@liveperson-design-system/tokens/scss/typography';

@include common.base-styles;

:host {
  --color-toggle-circle: #{colors.$navy-white};

  --color-toggle: #{transparency.$light-4};
  --color-toggle--hover: #{transparency.$light-2};
  --color-toggle--active: #{transparency.$light-1};

  --color-toggle-checked: #{colors.$blue};
  --color-toggle-checked--hover: #{colors.$blue-light};
  --color-toggle-checked--active: #{colors.$blue-darker};

  --color-toggle-outline: #{colors.$focus-outline};

  --color-label: #{colors.$navy-white};
  --color-label--hover: #{colors.$navy-white};

  display: inline-block;
  vertical-align: middle;
  @include typography.with-font-family;
  @include typography.input-label;
  padding: 1px 0;
}
:host([theme="light"]) {
  --color-toggle-circle: #{colors-light.$navy-white};

  --color-toggle: #{colors-light.$navy-light};
  --color-toggle--hover: #{colors-light.$navy};
  --color-toggle--active: #{colors-light.$navy};

  --color-toggle-checked: #{colors-light.$blue-light};
  --color-toggle-checked--hover: #{colors-light.$blue-dark};
  --color-toggle-checked--active: #{colors-light.$blue-dark};

  --color-toggle-outline: #{colors-light.$focus-outline};

  --color-label: #{colors-light.$navy-dark};
  --color-label--hover: #{colors-light.$navy-darker};
}

$toggle-circle-width: helpers.get-em(14px, typography.$size-small);
$toggle-circle-offset: 1px;
$toggle-offset: spacing.$space-xs;

label {
  display: flex;
  align-items: center;
}

#label {
  display: flex;
  align-items: center;
  cursor: pointer;
  color: var(--color-label);
  transition: color .15s ease-out;

  :host([label-position="left"]) & {
    flex-direction: row-reverse;
  }
}

input {
  &[type="checkbox"] {
    position: absolute;
    z-index: -1;
    opacity: 0;

    &[disabled] {
      + #label {
        opacity: transparency.$disabled;
        cursor: default;
      }
    }

    &:not([disabled]) {
      &:focus {
        + #label {
          color: var(--color-label--hover);

          #slider {
            background-color: var(--color-toggle--hover);
            box-shadow: var(--color-toggle-outline);
          }
        }
      }

      + #label {
        &:hover {
          color: var(--color-label--hover);

          #slider {
            background-color: var(--color-toggle--hover);
          }
        }

        &:active {
          #slider {
            background-color: var(--color-toggle--active);
          }
        }
      }

      &:checked {
        &:focus {
          + #label {
            #slider {
              background-color: var(--color-toggle-checked--hover);
              box-shadow: var(--color-toggle-outline);
            }
          }
        }

        + #label {
          &:hover {
            #slider {
              background-color: var(--color-toggle-checked--hover);
            }
          }

          &:active {
            #slider {
              background-color: var(--color-toggle-checked--active);
            }
          }
        }
      }
    }

    &:checked {
      + #label {
        #slider {
          background-color: var(--color-toggle-checked);

          &::after {
            transform: translate(calc(100% - #{$toggle-circle-offset}), -50%);
          }
        }
      }
    }
  }
}

#slider {
  position: relative;
  display: block;
  width: $toggle-circle-width * 2;
  height: calc(#{$toggle-circle-width} + #{$toggle-circle-offset} * 2);
  border-radius: border-radius.$border-radius-m;
  background-color: var(--color-toggle);
  margin-right: $toggle-offset;
  transition: all .15s ease-out;

  :host([label-position="left"]) & {
    margin-left: $toggle-offset;
    margin-right: 0;
  }

  &::after {
    content: '';
    position: absolute;
    z-index: 3;
    top: 50%;
    left: 0;
    display: block;
    width: $toggle-circle-width;
    height: calc(100% - #{$toggle-circle-offset * 2});
    border-radius: 50%;
    background-color: var(--color-toggle-circle);
    @include shadow.box-shadow(s);
    transform: translate(#{$toggle-circle-offset}, -50%);
    transition: transform .15s ease-out;
  }

  span {
    content: '';
    position: absolute;
    z-index: 1;
    top: 50%;
    display: block;
    @include shadow.box-shadow(s);
    transform: translateY(-50%);

    &:first-child {
      left: helpers.get-em(7px, typography.$size-small);
      width: 1px;
      height: helpers.get-em(7px, typography.$size-small);
      background-color: colors.$navy-white;
    }

    &:last-child {
      right: helpers.get-em(4px, typography.$size-small);
      width: helpers.get-em(4px, typography.$size-small);
      height: helpers.get-em(4px, typography.$size-small);
      border: 1px solid colors.$navy-lighter;
      border-radius: 50%;
    }
  }
}
