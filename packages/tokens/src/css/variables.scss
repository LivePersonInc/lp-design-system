@use '../scss/animation';
@use '../scss/border-radius';
@use '../scss/colors';
@use '../scss/colors-light';
@use '../scss/responsive';
@use '../scss/shadow';
@use '../scss/spacing';
@use '../scss/transparency';
@use '../scss/typography';

@mixin generate-css-variables($variables, $prefix) {
  @each $key, $value in $variables {
    --#{$prefix}-#{$key}: #{$value};
  }
}

.lpds-tokens {
  &-animation {
    @include generate-css-variables(animation.$duration, 'lpds-tokens-animation-duration');
    @include generate-css-variables(animation.$timing-function, 'lpds-tokens-animation-timing-function');
  }

  &-border-radius {
    @include generate-css-variables(border-radius.$border-radius, 'lpds-border-radius');
  }

  &-colors {
    @include generate-css-variables((
      black: colors.$black,
      white: colors.$white,

      navy-darker: colors.$navy-darker,
      navy-dark: colors.$navy-dark,
      navy: colors.$navy,
      navy-light: colors.$navy-light,
      navy-lighter: colors.$navy-lighter,
      navy-lightest: colors.$navy-lightest,
      navy-white: colors.$navy-white,

      blue-darker: colors.$blue-darker,
      blue-dark: colors.$blue-dark,
      blue: colors.$blue,
      blue-light: colors.$blue-light,
      blue-lighter: colors.$blue-lighter,

      orange-darker: colors.$orange-darker,
      orange-dark: colors.$orange-dark,
      orange: colors.$orange,
      orange-light: colors.$orange-light,
      orange-lighter: colors.$orange-lighter,

      green-darker: colors.$green-darker,
      green-dark: colors.$green-dark,
      green: colors.$green,
      green-light: colors.$green-light,
      green-lighter: colors.$green-lighter,

      red-darker: colors.$red-darker,
      red-dark: colors.$red-dark,
      red: colors.$red,
      red-light: colors.$red-light,
      red-lighter: colors.$red-lighter,

      yellow-darker: colors.$yellow-darker,
      yellow-dark: colors.$yellow-dark,
      yellow: colors.$yellow,
      yellow-light: colors.$yellow-light,
      yellow-lighter: colors.$yellow-lighter,

      chart-blue: colors.$chart-blue,
      chart-yellow: colors.$chart-yellow,
      chart-red: colors.$chart-red,
      chart-violet: colors.$chart-violet,
      chart-green: colors.$chart-green,
      chart-pink: colors.$chart-pink,
      chart-navy-light: colors.$chart-navy-light,
      chart-navy: colors.$chart-navy,

      focus-outline: colors.$focus-outline,
    ), 'lpds-tokens-colors');

    &-light {
      @include generate-css-variables((
        black: colors-light.$black,
        white: colors-light.$white,

        navy-darker: colors-light.$navy-darker,
        navy-dark: colors-light.$navy-dark,
        navy: colors-light.$navy,
        navy-light: colors-light.$navy-light,
        navy-lighter: colors-light.$navy-lighter,
        //navy-lightest: colors-light.$navy-lightest,
        navy-white: colors-light.$navy-white,

        blue-darker: colors-light.$blue-darker,
        blue-dark: colors-light.$blue-dark,
        blue: colors-light.$blue,
        blue-light: colors-light.$blue-light,
        blue-lighter: colors-light.$blue-lighter,

        orange-darker: colors-light.$orange-darker,
        orange-dark: colors-light.$orange-dark,
        orange: colors-light.$orange,
        orange-light: colors-light.$orange-light,
        orange-lighter: colors-light.$orange-lighter,

        green-darker: colors-light.$green-darker,
        green-dark: colors-light.$green-dark,
        green: colors-light.$green,
        green-light: colors-light.$green-light,
        green-lighter: colors-light.$green-lighter,

        red-darker: colors-light.$red-darker,
        red-dark: colors-light.$red-dark,
        red: colors-light.$red,
        red-light: colors-light.$red-light,
        red-lighter: colors-light.$red-lighter,

        yellow-darker: colors-light.$yellow-darker,
        yellow-dark: colors-light.$yellow-dark,
        yellow: colors-light.$yellow,
        yellow-light: colors-light.$yellow-light,
        yellow-lighter: colors-light.$yellow-lighter,

        chart-blue: colors-light.$chart-blue,
        chart-yellow: colors-light.$chart-yellow,
        chart-red: colors-light.$chart-red,
        chart-violet: colors-light.$chart-violet,
        chart-green: colors-light.$chart-green,
        chart-pink: colors-light.$chart-pink,
        chart-navy-light: colors-light.$chart-navy-light,
        chart-navy-lighter: colors-light.$chart-navy-lighter,
        //chart-navy: colors-light.$chart-navy,

        focus-outline: colors-light.$focus-outline,
      ), 'lpds-tokens-colors');
    }
  }

  &-responsive {
    @include generate-css-variables(responsive.$breakpoints, 'lpds-breakpoints');
  }

  &-shadow {
    @include generate-css-variables(shadow.$shadow, 'lpds-shadow');
    @include generate-css-variables(shadow.$shadow-text, 'lpds-shadow-text');
    @include generate-css-variables(shadow.$shadow-card, 'lpds-shadow-card');
    @include generate-css-variables(shadow.$shadow-input, 'lpds-shadow-input');
  }

  &-spacing {
    @include generate-css-variables(spacing.$spaces, 'lpds-tokens-spaces');
    @include generate-css-variables(spacing.$spaces-inner, 'lpds-tokens-spaces-inner');
  }

  &-transparency {
    --lpds-tokens-transparency-disabled: #{transparency.$disabled};
    @include generate-css-variables(transparency.$light, 'lpds-tokens-transparency-light');
    @include generate-css-variables(transparency.$dark, 'lpds-tokens-transparency-dark');
  }

  &-typography {
    @include generate-css-variables((
      roboto: typography.$font-roboto,
      roboto-mono: typography.$font-roboto-mono,
      roboto-condensed: typography.$font-roboto-condensed,
    ), 'lpds-tokens-typography-font');
    @include generate-css-variables((
      default: typography.$size-default,
      body: typography.$size-body,
      small: typography.$size-small,
      large: typography.$size-large,
    ), 'lpds-tokens-typography-size');
    @include generate-css-variables((
      small: typography.$line-height-small,
      medium: typography.$line-height-medium,
      large: typography.$line-height-large,
    ), 'lpds-tokens-typography-line-height');
    @include generate-css-variables((
      light: typography.$weight-light,
      regular: typography.$weight-regular,
      medium: typography.$weight-medium,
      bold: typography.$weight-bold,
    ), 'lpds-tokens-typography-weight');
    @include generate-css-variables((
      regular: typography.$letter-spacing-regular,
      all-caps: typography.$letter-spacing-all-caps,
      compact: typography.$letter-spacing-compact,
    ), 'lpds-tokens-typography-letter-spacing');
    @include generate-css-variables(typography.$font-size-heading, 'lpds-tokens-typography-heading');
  }
}
