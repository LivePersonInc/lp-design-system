@use '~lpds/styles/border-radius';
@use '~lpds/styles/colors';
@use '~lpds/styles/colors-light';
@use '~lpds/styles/spacing';
@use '~lpds/styles/transparency';
@use '~lpds/styles/typography';

:host {
  --color-option-bg: transparent;
  --color-option-bg-hover: #{transparency.$light-1};
  --color-option-bg-selected: #{colors.$periwinkle-lighter};
  --color-option-bg-selected-hover: #{colors.$periwinkle-light};

  --color-option-label: #{colors.$navy-white};
  --color-option-label-selected: #{colors.$navy-darker};

  display: flex;
  align-items: center;
  @include typography.input-value;
  color: var(--color-option-label);
  background-color: var(--color-option-bg);
  padding: spacing.get-space(xs, true) spacing.get-space(s, true);
  transition: color, background-color .15s ease-out;
  cursor: pointer;
}

:host([theme="light"]) {
  --color-option-bg: #{transparency.$dark-0};
  --color-option-bg-hover: #{transparency.$dark-1};
  --color-option-bg-selected: #{colors-light.$periwinkle};
  --color-option-bg-selected-hover: #{colors-light.$periwinkle-dark};

  --color-option-label: #{colors-light.$navy-dark};
  --color-option-label-selected: #{colors-light.$white};
}

:host(:hover) {
  background-color: var(--color-option-bg-hover);
}

:host(:focus) {
  outline: none;
  background-color: var(--color-option-bg-hover);
}

[selected]:not([selected="false"]) {
  :host(&) {
    color: var(--color-option-label-selected);
    background-color: var(--color-option-bg-selected);
  }

  :host(&:hover) {
    background-color: var(--color-option-bg-selected-hover);
  }
}

[hidden]:not([hidden="false"]) {
  :host(&) {
    display: none;
  }
}
