@use '../common/helpers';

@use '../scss/animation';
@use '../scss/border-radius';
@use '../scss/colors';
@use '../scss/colors-light';
@use '../scss/responsive';
@use '../scss/shadow';
@use '../scss/spacing';
@use '../scss/transparency';
@use '../scss/typography';

@include helpers.lpds-prefix {
  &-animation {
    &-duration {
      @include helpers.generate-helpers-classes(animation.$duration, animation-direction);
    }

    &-timing-function {
      @include helpers.generate-helpers-classes(animation.$timing-function, animation-timing-function);
    }
  }

  &-border-radius {
    @include helpers.generate-helpers-classes(border-radius.$border-radius, border-radius);

    @each $key, $value in border-radius.$border-radius {
      &-#{$key} {
        &-top {
          border-top-left-radius: $value;
          border-top-right-radius: $value;

          &-left {
            border-top-left-radius: $value;
          }

          &-right {
            border-top-right-radius: $value;
          }
        }

        &-bottom {
          border-bottom-left-radius: $value;
          border-bottom-right-radius: $value;

          &-left {
            border-bottom-left-radius: $value;
          }

          &-right {
            border-bottom-right-radius: $value;
          }
        }
      }
    }
  }

  &-colors {
    &-bg {
      @include helpers.generate-helpers-classes(colors.$colors, background-color);
    }

    &-text {
      @include helpers.generate-helpers-classes(colors.$colors, color);
    }

    .lpds-theme-light & {
      &-bg {
        @include helpers.generate-helpers-classes(colors-light.$colors, background-color);
      }

      &-text {
        @include helpers.generate-helpers-classes(colors-light.$colors, color);
      }
    }
  }

  &-responsive {
    $breakpoints-keys: map-keys(responsive.$breakpoints);

    &-hidden {
      display: none;

      @each $key in $breakpoints-keys {
        @include responsive.media($key) {
          &-#{$key} {
            display: none;
          }
        }
      }
    }

    &-visible {
      display: block;

      @each $key in $breakpoints-keys {
        @include responsive.media($key) {
          &-#{$key} {
            display: block;
          }
        }
      }
    }
  }

  &-shadow {
    @include helpers.generate-helpers-classes(shadow.$shadow, box-shadow);

    &-text {
      @include helpers.generate-helpers-classes(shadow.$shadow-text, text-shadow);
    }

    &-card {
      @include helpers.generate-helpers-classes(shadow.$shadow-card, box-shadow);
    }

    &-input {
      @include helpers.generate-helpers-classes(shadow.$shadow-input, box-shadow);
    }
  }

  &-spacing {
    @include helpers.generate-helpers-classes(spacing.$spaces, margin);

    @each $key, $value in spacing.$spaces {
      &-#{$key}-vertical {
        margin: {
          top: $value;
          bottom: $value;
        };
      }
    }

    @each $key, $value in spacing.$spaces {
      &-#{$key}-horizontal {
        margin: {
          left: $value;
          right: $value;
        };
      }
    }

    &-inner {
      @include helpers.generate-helpers-classes(spacing.$spaces-inner, padding);

      @each $key, $value in spacing.$spaces-inner {
        &-#{$key}-vertical {
          margin: {
            top: $value;
            bottom: $value;
          };
        }
      }

      @each $key, $value in spacing.$spaces-inner {
        &-#{$key}-horizontal {
          margin: {
            left: $value;
            right: $value;
          };
        }
      }
    }
  }

  &-transparency {
    &-disabled {
      opacity: transparency.$disabled;
    }

    &-light {
      @include helpers.generate-helpers-classes(transparency.$light, opacity);
    }

    &-dark {
      @include helpers.generate-helpers-classes(transparency.$dark, opacity);
    }
  }

  &-typography {
    &-font {
      @include helpers.generate-helpers-classes(typography.$fonts, font-family);
    }

    &-size {
      @include helpers.generate-helpers-classes(typography.$sizes, font-size);
    }

    &-line-height {
      @include helpers.generate-helpers-classes(typography.$line-heights, line-height);
    }

    &-weight {
      @include helpers.generate-helpers-classes(typography.$weights, font-weight);
    }

    &-letter-spacing {
      @include helpers.generate-helpers-classes(typography.$letter-spacings, letter-spacing);
    }

    &-heading {
      @include helpers.generate-helpers-classes(typography.$font-size-heading, font-size);
    }

    &-head {
      @each $head in map-keys(typography.$font-size-heading) {
        &-#{$head} {
          @include typography.header($head);
        }
      }
    }

    &-body {
      @include typography.body;

      &-small {
        @include typography.body(true);
      }

      &-bold {
        @include typography.body-bold;

        &-small {
          @include typography.body-bold(true);
        }
      }

      &-italic {
        @include typography.body-italic;

        &-small {
          @include typography.body-italic(true);
        }
      }
    }

    &-button {
      @each $key in (small, medium, large) {
        &-#{$key} {
          @include typography.button($key);
        }
      }
    }

    &-tag {
      @include typography.tag;
    }

    &-table {
      &-header {
        @include typography.table-header;
      }

      &-cell {
        @include typography.table-cell;
      }
    }

    &-input {
      &-label {
        @include typography.input-label;
      }

      &-value {
        @include typography.input-value;
      }
    }

    &-code {
      @include typography.code;
    }

    &-chart {
      &-title {
        @include typography.chart-title;
      }

      &-axis {
        &-title {
          @include typography.chart-axis-title;
        }

        &-label {
          @include typography.chart-axis-label;
        }
      }

      &-number {
        @include typography.chart-number;

        &-big {
          @include typography.chart-number(true);
        }

        &-title {
          @include typography.chart-number-title;
        }
      }
    }
  }
}
